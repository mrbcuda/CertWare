/**
 * MSPDI is copyright Microsoft, Inc.
 * Implementation wrapper in ecore done by Kestrel Technology LLC
 */
package net.certware.planning.mspdi.provider;

import java.util.ArrayList;
import java.util.Collection;

import net.certware.planning.mspdi.util.MspdiAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MspdiItemProviderAdapterFactory extends MspdiAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MspdiItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.AssignmentsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentsTypeItemProvider assignmentsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.AssignmentsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentsTypeAdapter() {
		if (assignmentsTypeItemProvider == null) {
			assignmentsTypeItemProvider = new AssignmentsTypeItemProvider(this);
		}

		return assignmentsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.AssignmentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentTypeItemProvider assignmentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.AssignmentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentTypeAdapter() {
		if (assignmentTypeItemProvider == null) {
			assignmentTypeItemProvider = new AssignmentTypeItemProvider(this);
		}

		return assignmentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.AvailabilityPeriodsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AvailabilityPeriodsTypeItemProvider availabilityPeriodsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.AvailabilityPeriodsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAvailabilityPeriodsTypeAdapter() {
		if (availabilityPeriodsTypeItemProvider == null) {
			availabilityPeriodsTypeItemProvider = new AvailabilityPeriodsTypeItemProvider(this);
		}

		return availabilityPeriodsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.AvailabilityPeriodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AvailabilityPeriodTypeItemProvider availabilityPeriodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.AvailabilityPeriodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAvailabilityPeriodTypeAdapter() {
		if (availabilityPeriodTypeItemProvider == null) {
			availabilityPeriodTypeItemProvider = new AvailabilityPeriodTypeItemProvider(this);
		}

		return availabilityPeriodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.BaselineType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaselineTypeItemProvider baselineTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.BaselineType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaselineTypeAdapter() {
		if (baselineTypeItemProvider == null) {
			baselineTypeItemProvider = new BaselineTypeItemProvider(this);
		}

		return baselineTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.BaselineType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaselineType1ItemProvider baselineType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.BaselineType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaselineType1Adapter() {
		if (baselineType1ItemProvider == null) {
			baselineType1ItemProvider = new BaselineType1ItemProvider(this);
		}

		return baselineType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.BaselineType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaselineType2ItemProvider baselineType2ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.BaselineType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaselineType2Adapter() {
		if (baselineType2ItemProvider == null) {
			baselineType2ItemProvider = new BaselineType2ItemProvider(this);
		}

		return baselineType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.CalendarsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalendarsTypeItemProvider calendarsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.CalendarsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalendarsTypeAdapter() {
		if (calendarsTypeItemProvider == null) {
			calendarsTypeItemProvider = new CalendarsTypeItemProvider(this);
		}

		return calendarsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.CalendarType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalendarTypeItemProvider calendarTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.CalendarType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalendarTypeAdapter() {
		if (calendarTypeItemProvider == null) {
			calendarTypeItemProvider = new CalendarTypeItemProvider(this);
		}

		return calendarTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExceptionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExceptionsTypeItemProvider exceptionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExceptionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExceptionsTypeAdapter() {
		if (exceptionsTypeItemProvider == null) {
			exceptionsTypeItemProvider = new ExceptionsTypeItemProvider(this);
		}

		return exceptionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExceptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExceptionTypeItemProvider exceptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExceptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExceptionTypeAdapter() {
		if (exceptionTypeItemProvider == null) {
			exceptionTypeItemProvider = new ExceptionTypeItemProvider(this);
		}

		return exceptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExtendedAttributesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendedAttributesTypeItemProvider extendedAttributesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExtendedAttributesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtendedAttributesTypeAdapter() {
		if (extendedAttributesTypeItemProvider == null) {
			extendedAttributesTypeItemProvider = new ExtendedAttributesTypeItemProvider(this);
		}

		return extendedAttributesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExtendedAttributeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendedAttributeTypeItemProvider extendedAttributeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExtendedAttributeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtendedAttributeTypeAdapter() {
		if (extendedAttributeTypeItemProvider == null) {
			extendedAttributeTypeItemProvider = new ExtendedAttributeTypeItemProvider(this);
		}

		return extendedAttributeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExtendedAttributeType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendedAttributeType1ItemProvider extendedAttributeType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExtendedAttributeType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtendedAttributeType1Adapter() {
		if (extendedAttributeType1ItemProvider == null) {
			extendedAttributeType1ItemProvider = new ExtendedAttributeType1ItemProvider(this);
		}

		return extendedAttributeType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExtendedAttributeType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendedAttributeType2ItemProvider extendedAttributeType2ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExtendedAttributeType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtendedAttributeType2Adapter() {
		if (extendedAttributeType2ItemProvider == null) {
			extendedAttributeType2ItemProvider = new ExtendedAttributeType2ItemProvider(this);
		}

		return extendedAttributeType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ExtendedAttributeType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendedAttributeType3ItemProvider extendedAttributeType3ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ExtendedAttributeType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtendedAttributeType3Adapter() {
		if (extendedAttributeType3ItemProvider == null) {
			extendedAttributeType3ItemProvider = new ExtendedAttributeType3ItemProvider(this);
		}

		return extendedAttributeType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.MasksType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasksTypeItemProvider masksTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.MasksType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasksTypeAdapter() {
		if (masksTypeItemProvider == null) {
			masksTypeItemProvider = new MasksTypeItemProvider(this);
		}

		return masksTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.MaskType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaskTypeItemProvider maskTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.MaskType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaskTypeAdapter() {
		if (maskTypeItemProvider == null) {
			maskTypeItemProvider = new MaskTypeItemProvider(this);
		}

		return maskTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.OutlineCodesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutlineCodesTypeItemProvider outlineCodesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.OutlineCodesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutlineCodesTypeAdapter() {
		if (outlineCodesTypeItemProvider == null) {
			outlineCodesTypeItemProvider = new OutlineCodesTypeItemProvider(this);
		}

		return outlineCodesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.OutlineCodeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutlineCodeTypeItemProvider outlineCodeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.OutlineCodeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutlineCodeTypeAdapter() {
		if (outlineCodeTypeItemProvider == null) {
			outlineCodeTypeItemProvider = new OutlineCodeTypeItemProvider(this);
		}

		return outlineCodeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.OutlineCodeType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutlineCodeType1ItemProvider outlineCodeType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.OutlineCodeType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutlineCodeType1Adapter() {
		if (outlineCodeType1ItemProvider == null) {
			outlineCodeType1ItemProvider = new OutlineCodeType1ItemProvider(this);
		}

		return outlineCodeType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.OutlineCodeType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutlineCodeType2ItemProvider outlineCodeType2ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.OutlineCodeType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutlineCodeType2Adapter() {
		if (outlineCodeType2ItemProvider == null) {
			outlineCodeType2ItemProvider = new OutlineCodeType2ItemProvider(this);
		}

		return outlineCodeType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.PredecessorLinkType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PredecessorLinkTypeItemProvider predecessorLinkTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.PredecessorLinkType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPredecessorLinkTypeAdapter() {
		if (predecessorLinkTypeItemProvider == null) {
			predecessorLinkTypeItemProvider = new PredecessorLinkTypeItemProvider(this);
		}

		return predecessorLinkTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ProjectType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectTypeItemProvider projectTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ProjectType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectTypeAdapter() {
		if (projectTypeItemProvider == null) {
			projectTypeItemProvider = new ProjectTypeItemProvider(this);
		}

		return projectTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.RatesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RatesTypeItemProvider ratesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.RatesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRatesTypeAdapter() {
		if (ratesTypeItemProvider == null) {
			ratesTypeItemProvider = new RatesTypeItemProvider(this);
		}

		return ratesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.RateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateTypeItemProvider rateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.RateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRateTypeAdapter() {
		if (rateTypeItemProvider == null) {
			rateTypeItemProvider = new RateTypeItemProvider(this);
		}

		return rateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ResourcesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourcesTypeItemProvider resourcesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ResourcesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourcesTypeAdapter() {
		if (resourcesTypeItemProvider == null) {
			resourcesTypeItemProvider = new ResourcesTypeItemProvider(this);
		}

		return resourcesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceTypeItemProvider resourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceTypeAdapter() {
		if (resourceTypeItemProvider == null) {
			resourceTypeItemProvider = new ResourceTypeItemProvider(this);
		}

		return resourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.TasksType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TasksTypeItemProvider tasksTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.TasksType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTasksTypeAdapter() {
		if (tasksTypeItemProvider == null) {
			tasksTypeItemProvider = new TasksTypeItemProvider(this);
		}

		return tasksTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.TaskType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskTypeItemProvider taskTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.TaskType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskTypeAdapter() {
		if (taskTypeItemProvider == null) {
			taskTypeItemProvider = new TaskTypeItemProvider(this);
		}

		return taskTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.TimePeriodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePeriodTypeItemProvider timePeriodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.TimePeriodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePeriodTypeAdapter() {
		if (timePeriodTypeItemProvider == null) {
			timePeriodTypeItemProvider = new TimePeriodTypeItemProvider(this);
		}

		return timePeriodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.TimePeriodType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePeriodType1ItemProvider timePeriodType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.TimePeriodType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePeriodType1Adapter() {
		if (timePeriodType1ItemProvider == null) {
			timePeriodType1ItemProvider = new TimePeriodType1ItemProvider(this);
		}

		return timePeriodType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.TimePeriodType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePeriodType2ItemProvider timePeriodType2ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.TimePeriodType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePeriodType2Adapter() {
		if (timePeriodType2ItemProvider == null) {
			timePeriodType2ItemProvider = new TimePeriodType2ItemProvider(this);
		}

		return timePeriodType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.TimephasedDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimephasedDataTypeItemProvider timephasedDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.TimephasedDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimephasedDataTypeAdapter() {
		if (timephasedDataTypeItemProvider == null) {
			timephasedDataTypeItemProvider = new TimephasedDataTypeItemProvider(this);
		}

		return timephasedDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ValueListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueListTypeItemProvider valueListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ValueListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueListTypeAdapter() {
		if (valueListTypeItemProvider == null) {
			valueListTypeItemProvider = new ValueListTypeItemProvider(this);
		}

		return valueListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ValuesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValuesTypeItemProvider valuesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ValuesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValuesTypeAdapter() {
		if (valuesTypeItemProvider == null) {
			valuesTypeItemProvider = new ValuesTypeItemProvider(this);
		}

		return valuesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeItemProvider valueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeAdapter() {
		if (valueTypeItemProvider == null) {
			valueTypeItemProvider = new ValueTypeItemProvider(this);
		}

		return valueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.ValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueType1ItemProvider valueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.ValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueType1Adapter() {
		if (valueType1ItemProvider == null) {
			valueType1ItemProvider = new ValueType1ItemProvider(this);
		}

		return valueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WBSMasksType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WBSMasksTypeItemProvider wbsMasksTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WBSMasksType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWBSMasksTypeAdapter() {
		if (wbsMasksTypeItemProvider == null) {
			wbsMasksTypeItemProvider = new WBSMasksTypeItemProvider(this);
		}

		return wbsMasksTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WBSMaskType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WBSMaskTypeItemProvider wbsMaskTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WBSMaskType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWBSMaskTypeAdapter() {
		if (wbsMaskTypeItemProvider == null) {
			wbsMaskTypeItemProvider = new WBSMaskTypeItemProvider(this);
		}

		return wbsMaskTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WeekDaysType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeekDaysTypeItemProvider weekDaysTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WeekDaysType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeekDaysTypeAdapter() {
		if (weekDaysTypeItemProvider == null) {
			weekDaysTypeItemProvider = new WeekDaysTypeItemProvider(this);
		}

		return weekDaysTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WeekDayType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeekDayTypeItemProvider weekDayTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WeekDayType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeekDayTypeAdapter() {
		if (weekDayTypeItemProvider == null) {
			weekDayTypeItemProvider = new WeekDayTypeItemProvider(this);
		}

		return weekDayTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WeekDayType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeekDayType1ItemProvider weekDayType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WeekDayType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeekDayType1Adapter() {
		if (weekDayType1ItemProvider == null) {
			weekDayType1ItemProvider = new WeekDayType1ItemProvider(this);
		}

		return weekDayType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WorkingTimesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkingTimesTypeItemProvider workingTimesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WorkingTimesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkingTimesTypeAdapter() {
		if (workingTimesTypeItemProvider == null) {
			workingTimesTypeItemProvider = new WorkingTimesTypeItemProvider(this);
		}

		return workingTimesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WorkingTimesType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkingTimesType1ItemProvider workingTimesType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WorkingTimesType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkingTimesType1Adapter() {
		if (workingTimesType1ItemProvider == null) {
			workingTimesType1ItemProvider = new WorkingTimesType1ItemProvider(this);
		}

		return workingTimesType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WorkingTimeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkingTimeTypeItemProvider workingTimeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WorkingTimeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkingTimeTypeAdapter() {
		if (workingTimeTypeItemProvider == null) {
			workingTimeTypeItemProvider = new WorkingTimeTypeItemProvider(this);
		}

		return workingTimeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WorkingTimeType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkingTimeType1ItemProvider workingTimeType1ItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WorkingTimeType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkingTimeType1Adapter() {
		if (workingTimeType1ItemProvider == null) {
			workingTimeType1ItemProvider = new WorkingTimeType1ItemProvider(this);
		}

		return workingTimeType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WorkWeeksType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkWeeksTypeItemProvider workWeeksTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WorkWeeksType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkWeeksTypeAdapter() {
		if (workWeeksTypeItemProvider == null) {
			workWeeksTypeItemProvider = new WorkWeeksTypeItemProvider(this);
		}

		return workWeeksTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.certware.planning.mspdi.WorkWeekType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkWeekTypeItemProvider workWeekTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.certware.planning.mspdi.WorkWeekType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkWeekTypeAdapter() {
		if (workWeekTypeItemProvider == null) {
			workWeekTypeItemProvider = new WorkWeekTypeItemProvider(this);
		}

		return workWeekTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (assignmentsTypeItemProvider != null) assignmentsTypeItemProvider.dispose();
		if (assignmentTypeItemProvider != null) assignmentTypeItemProvider.dispose();
		if (availabilityPeriodsTypeItemProvider != null) availabilityPeriodsTypeItemProvider.dispose();
		if (availabilityPeriodTypeItemProvider != null) availabilityPeriodTypeItemProvider.dispose();
		if (baselineTypeItemProvider != null) baselineTypeItemProvider.dispose();
		if (baselineType1ItemProvider != null) baselineType1ItemProvider.dispose();
		if (baselineType2ItemProvider != null) baselineType2ItemProvider.dispose();
		if (calendarsTypeItemProvider != null) calendarsTypeItemProvider.dispose();
		if (calendarTypeItemProvider != null) calendarTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (exceptionsTypeItemProvider != null) exceptionsTypeItemProvider.dispose();
		if (exceptionTypeItemProvider != null) exceptionTypeItemProvider.dispose();
		if (extendedAttributesTypeItemProvider != null) extendedAttributesTypeItemProvider.dispose();
		if (extendedAttributeTypeItemProvider != null) extendedAttributeTypeItemProvider.dispose();
		if (extendedAttributeType1ItemProvider != null) extendedAttributeType1ItemProvider.dispose();
		if (extendedAttributeType2ItemProvider != null) extendedAttributeType2ItemProvider.dispose();
		if (extendedAttributeType3ItemProvider != null) extendedAttributeType3ItemProvider.dispose();
		if (masksTypeItemProvider != null) masksTypeItemProvider.dispose();
		if (maskTypeItemProvider != null) maskTypeItemProvider.dispose();
		if (outlineCodesTypeItemProvider != null) outlineCodesTypeItemProvider.dispose();
		if (outlineCodeTypeItemProvider != null) outlineCodeTypeItemProvider.dispose();
		if (outlineCodeType1ItemProvider != null) outlineCodeType1ItemProvider.dispose();
		if (outlineCodeType2ItemProvider != null) outlineCodeType2ItemProvider.dispose();
		if (predecessorLinkTypeItemProvider != null) predecessorLinkTypeItemProvider.dispose();
		if (projectTypeItemProvider != null) projectTypeItemProvider.dispose();
		if (ratesTypeItemProvider != null) ratesTypeItemProvider.dispose();
		if (rateTypeItemProvider != null) rateTypeItemProvider.dispose();
		if (resourcesTypeItemProvider != null) resourcesTypeItemProvider.dispose();
		if (resourceTypeItemProvider != null) resourceTypeItemProvider.dispose();
		if (tasksTypeItemProvider != null) tasksTypeItemProvider.dispose();
		if (taskTypeItemProvider != null) taskTypeItemProvider.dispose();
		if (timePeriodTypeItemProvider != null) timePeriodTypeItemProvider.dispose();
		if (timePeriodType1ItemProvider != null) timePeriodType1ItemProvider.dispose();
		if (timePeriodType2ItemProvider != null) timePeriodType2ItemProvider.dispose();
		if (timephasedDataTypeItemProvider != null) timephasedDataTypeItemProvider.dispose();
		if (valueListTypeItemProvider != null) valueListTypeItemProvider.dispose();
		if (valuesTypeItemProvider != null) valuesTypeItemProvider.dispose();
		if (valueTypeItemProvider != null) valueTypeItemProvider.dispose();
		if (valueType1ItemProvider != null) valueType1ItemProvider.dispose();
		if (wbsMasksTypeItemProvider != null) wbsMasksTypeItemProvider.dispose();
		if (wbsMaskTypeItemProvider != null) wbsMaskTypeItemProvider.dispose();
		if (weekDaysTypeItemProvider != null) weekDaysTypeItemProvider.dispose();
		if (weekDayTypeItemProvider != null) weekDayTypeItemProvider.dispose();
		if (weekDayType1ItemProvider != null) weekDayType1ItemProvider.dispose();
		if (workingTimesTypeItemProvider != null) workingTimesTypeItemProvider.dispose();
		if (workingTimesType1ItemProvider != null) workingTimesType1ItemProvider.dispose();
		if (workingTimeTypeItemProvider != null) workingTimeTypeItemProvider.dispose();
		if (workingTimeType1ItemProvider != null) workingTimeType1ItemProvider.dispose();
		if (workWeeksTypeItemProvider != null) workWeeksTypeItemProvider.dispose();
		if (workWeekTypeItemProvider != null) workWeekTypeItemProvider.dispose();
	}

}
