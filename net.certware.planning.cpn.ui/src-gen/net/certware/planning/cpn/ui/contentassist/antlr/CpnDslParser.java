/*
* generated by Xtext
*/
package net.certware.planning.cpn.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import net.certware.planning.cpn.services.CpnDslGrammarAccess;

public class CpnDslParser extends AbstractContentAssistParser {
	
	@Inject
	private CpnDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected net.certware.planning.cpn.ui.contentassist.antlr.internal.InternalCpnDslParser createParser() {
		net.certware.planning.cpn.ui.contentassist.antlr.internal.InternalCpnDslParser result = new net.certware.planning.cpn.ui.contentassist.antlr.internal.InternalCpnDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPlansAccess().getGroup(), "rule__Plans__Group__0");
					put(grammarAccess.getArgumentModelsAccess().getGroup(), "rule__ArgumentModels__Group__0");
					put(grammarAccess.getAllocationAccess().getGroup(), "rule__Allocation__Group__0");
					put(grammarAccess.getAllocationAccess().getGroup_1(), "rule__Allocation__Group_1__0");
					put(grammarAccess.getAllocationAccess().getGroup_2(), "rule__Allocation__Group_2__0");
					put(grammarAccess.getAllocationAccess().getGroup_3(), "rule__Allocation__Group_3__0");
					put(grammarAccess.getAllocationAccess().getGroup_4(), "rule__Allocation__Group_4__0");
					put(grammarAccess.getPlanAccess().getGroup(), "rule__Plan__Group__0");
					put(grammarAccess.getPlanAccess().getGroup_4(), "rule__Plan__Group_4__0");
					put(grammarAccess.getPlanAccess().getGroup_5(), "rule__Plan__Group_5__0");
					put(grammarAccess.getPlansAccess().getArgumentmodelsAssignment_0(), "rule__Plans__ArgumentmodelsAssignment_0");
					put(grammarAccess.getPlansAccess().getPlansAssignment_1(), "rule__Plans__PlansAssignment_1");
					put(grammarAccess.getArgumentModelsAccess().getImportURIAssignment_1(), "rule__ArgumentModels__ImportURIAssignment_1");
					put(grammarAccess.getAllocationAccess().getCostAssignment_1_1(), "rule__Allocation__CostAssignment_1_1");
					put(grammarAccess.getAllocationAccess().getDurationAssignment_2_1(), "rule__Allocation__DurationAssignment_2_1");
					put(grammarAccess.getAllocationAccess().getTeamAssignment_3_1(), "rule__Allocation__TeamAssignment_3_1");
					put(grammarAccess.getAllocationAccess().getFacilityAssignment_4_1(), "rule__Allocation__FacilityAssignment_4_1");
					put(grammarAccess.getPlanAccess().getIdAssignment_1(), "rule__Plan__IdAssignment_1");
					put(grammarAccess.getPlanAccess().getElementAssignment_3(), "rule__Plan__ElementAssignment_3");
					put(grammarAccess.getPlanAccess().getEstimatedAssignment_4_2(), "rule__Plan__EstimatedAssignment_4_2");
					put(grammarAccess.getPlanAccess().getActualAssignment_5_2(), "rule__Plan__ActualAssignment_5_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			net.certware.planning.cpn.ui.contentassist.antlr.internal.InternalCpnDslParser typedParser = (net.certware.planning.cpn.ui.contentassist.antlr.internal.InternalCpnDslParser) parser;
			typedParser.entryRulePlans();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CpnDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CpnDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
